<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easychat.mapper.UserInfoBeautyMapper">

		<!--实体映射-->
		<resultMap id="base_result_map" type="com.easychat.entity.po.UserInfoBeauty">
			<!--自增id-->
			<id column="id" property="id"  />
			<!--用户-->
			<result column="user_id" property="userId"  />
			<!--邮箱号-->
			<result column="email" property="email"  />
			<!--状态-->
			<result column="status" property="status"  />

		</resultMap>
		<!--通用查询结果列-->
		<sql id="base_column_list">
		user_id,email,status,id
		</sql>
		<!--基础查询条件-->
		<sql id="base_query_condition">
			<if test="query.userId!=null">
				and user_id=#{query.userId}
			</if>
			<if test="query.email!=null">
				and email=#{query.email}
			</if>
			<if test="query.status!=null">
				and status=#{query.status}
			</if>
			<if test="query.id!=null">
				and id=#{query.id}
			</if>
		</sql>

		<!--拓展查询条件-->
	<sql id="base_query_condition_extend">
			<if test="query.emailFuzzy!=null and query.emailFuzzy!=''">
				and email like concat('%', #{emailFuzzy}, '%')
			</if>
		</sql>
		<!--通用条件列-->
		<sql id="query_condition">
			<where>
				<include refid="base_query_condition"/>
				<include refid="base_query_condition_extend"/>
			</where>
		</sql>
	<!--查询集合-->
	<select id="selectList" resultMap="base_result_map">
		SELECT
			<include refid="base_column_list"/>
			FROM user_info_beauty
			<include refid="query_condition"/>
			<if test="query.orderBy!=null">
				order by ${query.orderBy}
			</if>
			<if test="query.simplePage!=null">
				limit #{query.simplePage.start},#{query.simplePage.end}
			</if>
		</select>
	<!--查询数量-->
	<select id="selectCount" resultType="java.lang.Integer">
		SELECT count(1) FROM user_info_beauty<include refid="query_condition"/>
	</select>
	<!--插入（匹配有值的字段）-->
		<insert id="insert" parameterType="com.easychat.entity.po.UserInfoBeauty">
			<selectKey keyProperty="bean.id" resultType="Integer" order="AFTER">
				SELECT LAST_INSERT_ID()
			</selectKey>
			INSERT INTO user_info_beauty
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="bean.userId!=null">
					user_id,
				</if>
				<if test="bean.email!=null">
					email,
				</if>
				<if test="bean.status!=null">
					status,
				</if>
				<if test="bean.id!=null">
					id,
				</if>
			</trim>
			<trim prefix="values(" suffix=")" suffixOverrides=",">
				<if test="bean.userId!=null">
					#{bean.userId},
				</if>
				<if test="bean.email!=null">
					#{bean.email},
				</if>
				<if test="bean.status!=null">
					#{bean.status},
				</if>
				<if test="bean.id!=null">
					#{bean.id},
				</if>
			</trim>
		</insert>
	<!--插入或更新（匹配有值的字段）-->
	<insert id="insertOrUpdate" parameterType="com.easychat.entity.po.UserInfoBeauty">
		INSERT INTO user_info_beauty
		<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="bean.userId!=null">
					user_id,
				</if>
				<if test="bean.email!=null">
					email,
				</if>
				<if test="bean.status!=null">
					status,
				</if>
				<if test="bean.id!=null">
					id,
				</if>
			</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.userId!=null">
				#{bean.userId},
			</if>
			<if test="bean.email!=null">
				#{bean.email},
			</if>
			<if test="bean.status!=null">
				#{bean.status},
			</if>
			<if test="bean.id!=null">
				#{bean.id},
			</if>
		</trim>
		on DUPLICATE key update
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.status!=null">
				status=VALUES(status),
			</if>
		</trim>
	</insert>
	<!--添加(批量插入)-->
	<insert id="insertBatch" parameterType="com.easychat.entity.po.UserInfoBeauty" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO user_info_beauty(user_id,email,status,) VALUES
		<foreach collection="list" item="item" separator=",">
			(
			#{item.userId},#{item.email},#{item.status},
			)
		</foreach>
	</insert>
	<!--批量新增修改(批量插入)-->
	<insert id="insertOrUpdateBatch" parameterType="com.easychat.entity.po.UserInfoBeauty">
		INSERT INTO user_info_beauty(user_id,email,status,) VALUES
		<foreach collection="list" item="item" separator=",">
			(
			#{item.userId},#{item.email},#{item.status},
			)
		</foreach>
		on DUPLICATE key update
		user_id=VALUES(user_id),
		email=VALUES(email),
		status=VALUES(status),
	</insert>
	<!--根据Id查询-->
	<select id="selectById" resultMap="base_result_map">
		select <include refid="base_column_list"/> from user_info_beauty where id=#{id}
	</select>
	<!--根据Id更新-->
<update id="updateById" parameterType="com.easychat.entity.po.UserInfoBeauty">
		UPDATE user_info_beauty
		<set>
			<if test="bean.userId!=null">
				user_id=#{bean.userId},
			</if>
			<if test="bean.email!=null">
				email=#{bean.email},
			</if>
			<if test="bean.status!=null">
				status=#{bean.status},
			</if>
			<if test="bean.id!=null">
				id=#{bean.id},
			</if>
		</set>
		where id=#{id}
	</update>
	<!--根据Id删除-->
	<delete id="deleteById">
		delete from user_info_beauty where id=#{id}
	</delete>
	<!--根据UserId查询-->
	<select id="selectByUserId" resultMap="base_result_map">
		select <include refid="base_column_list"/> from user_info_beauty where user_id=#{userId}
	</select>
	<!--根据UserId更新-->
<update id="updateByUserId" parameterType="com.easychat.entity.po.UserInfoBeauty">
		UPDATE user_info_beauty
		<set>
			<if test="bean.userId!=null">
				user_id=#{bean.userId},
			</if>
			<if test="bean.email!=null">
				email=#{bean.email},
			</if>
			<if test="bean.status!=null">
				status=#{bean.status},
			</if>
			<if test="bean.id!=null">
				id=#{bean.id},
			</if>
		</set>
		where user_id=#{userId}
	</update>
	<!--根据UserId删除-->
	<delete id="deleteByUserId">
		delete from user_info_beauty where user_id=#{userId}
	</delete>
	<!--根据Email查询-->
	<select id="selectByEmail" resultMap="base_result_map">
		select <include refid="base_column_list"/> from user_info_beauty where email=#{email}
	</select>
	<!--根据Email更新-->
<update id="updateByEmail" parameterType="com.easychat.entity.po.UserInfoBeauty">
		UPDATE user_info_beauty
		<set>
			<if test="bean.userId!=null">
				user_id=#{bean.userId},
			</if>
			<if test="bean.email!=null">
				email=#{bean.email},
			</if>
			<if test="bean.status!=null">
				status=#{bean.status},
			</if>
			<if test="bean.id!=null">
				id=#{bean.id},
			</if>
		</set>
		where email=#{email}
	</update>
	<!--根据Email删除-->
	<delete id="deleteByEmail">
		delete from user_info_beauty where email=#{email}
	</delete>
</mapper>